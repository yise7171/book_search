{"version":3,"sources":["components/SearchBook.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["SearchBook","id","year","title","summary","poster","actor","director","className","to","pathname","state","src","alt","slice","Home","isLoading","books","value","clientId","secretKey","getBook","a","ID_KEY","SECRET_KEY","search","setState","axios","get","params","query","display","start","headers","items","data","console","log","handleChange","e","target","handleChangeId","handleChangeKey","handleSubmit","preventDefault","this","onSubmit","type","onChange","placeholder","map","book","isbn","pubdate","image","publisher","description","React","Component","About","props","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad135137.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SearchBook.css\";\r\n\r\nfunction SearchBook({ id, year, title, summary, poster, actor, director }) {\r\n    return (\r\n        <div className=\"book\">\r\n            <Link\r\n                to={{\r\n                    pathname: `/detail/${id}`,\r\n                    state: {\r\n                        year,\r\n                        title,\r\n                        summary,\r\n                        poster,\r\n                        director,\r\n                        actor\r\n                    }\r\n                }}\r\n            >\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"book__data\">\r\n                    <h3 className=\"book__title\">{title}</h3>\r\n                    <h5 className=\"book__year\">{year}</h5>\r\n                    <p className=\"book__director\">{director}</p>\r\n                    <p className=\"book__actor\">{actor}</p>\r\n                    <p className=\"book__summary\">{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nSearchBook.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    director: PropTypes.string.isRequired,\r\n    actor: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SearchBook;","import React from 'react';\r\nimport axios from 'axios';\r\nimport SearchBook from '../components/SearchBook';\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n    // state 관리 \r\n    state = {\r\n        isLoading: true,\r\n        books: [],\r\n        value: \"\",\r\n        clientId: \"\",\r\n        secretKey: \"\"\r\n    };\r\n\r\n    // 네이버 API의 키값을 이용하여 검색\r\n    getBook = async () => {\r\n        const ID_KEY = this.state.clientId;\r\n        const SECRET_KEY = this.state.secretKey;\r\n        const search = this.state.value;\r\n        try {\r\n            if (search === \"\") {\r\n                this.setState({ books: [], isLoading: false })\r\n            } else {\r\n                // 네이버 API 검색\r\n                const { data: {\r\n                    items\r\n                } } = await axios.get('https://openapi.naver.com/v1/search/book.json', {\r\n                    params: {\r\n                        query: search,\r\n                        display: 10,\r\n                        start: 1\r\n                    },\r\n                    headers: {\r\n                        'X-Naver-Client-Id': ID_KEY,\r\n                        'X-Naver-Client-Secret': SECRET_KEY,\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                });\r\n                // State를 직접 저자아지 않기 위해 book 정보를 저장\r\n                this.setState({ books: items, isLoading: false });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    // 컴포넌트 랜더링되면 수행\r\n    componentDidMount() {\r\n        this.getBook();\r\n    };\r\n\r\n    // input 이벤트인 onchange를 사용하여 검색어를 입력하면 실시간으로 검색 정보(value)를 State에 저장합니다\r\n    // 또한 handleSubmit은 input box에서 엔터를 입력 시 정보가 전송되는 기본 이벤트이며\r\n    // 해당 이벤트가 발생할 때 getSearchMovie() 함수를 실행하도록 하였습니다.\r\n    // 다만 해당 이벤트의 고유 기능은 사용하지 않기에 e.preventDefault()를 사용하여 막아두었습니다\r\n    // 출처: https://msyu1207.tistory.com/entry/React로-영화-정보를-검색해보자-두번째-네이버-API-사용-CORS-설정-하기 [Lotts Blog]\r\n    handleChange = (e) => {\r\n        this.setState({ value: e.target.value });\r\n    };\r\n\r\n    handleChangeId = (e) => {\r\n        this.setState({ clientId: e.target.clientId });\r\n    };\r\n\r\n    handleChangeKey = (e) => {\r\n        this.setState({ secretKey: e.target.secretKey });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.getBook();\r\n    };\r\n\r\n    render() {\r\n        const { books, isLoading } = this.state;\r\n        // 랜더링 시 Loading.. 수행하고 랜더링 후 componentDidMount()에서 getBook() 수행\r\n        return (\r\n            <section className=\"container\">\r\n                {\r\n                    isLoading ? (\r\n                        <div className=\"loader\">\r\n                            <span className=\"loader_text\">Loading..</span> </div>\r\n                    ) :\r\n                        (\r\n                            // 변경된 State의 값에서 도서 정보리스트를 map을 이용하여 \r\n                            // 하나씩 SearchBook로 렌더링\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div>\r\n                                    <div className=\"input_div\">\r\n                                        <h1>도서 검색</h1>\r\n                                        <input className=\"input_search\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"도서명을 검색해 보세요.\" />\r\n                                        <input className=\"input_clientid\" type=\"text\" value={this.state.clientId} onChange={this.handleChangeId} placeholder=\"API Client ID를 입력하세요\" />\r\n                                        <input className=\"input_secretkey\" type=\"text\" value={this.state.secretKey} onChange={this.handleChangeKey} placeholder=\"API Scret Key를 입력하세요.\" />\r\n                                        <button type=\"submit\">검색</button>\r\n                                    </div>\r\n                                    <div className=\"books\"> {\r\n                                        books.map(book => (\r\n                                            <SearchBook\r\n                                                key={book.isbn}\r\n                                                id={book.isbn}\r\n                                                year={book.pubdate}\r\n                                                title={book.title}\r\n                                                poster={book.image}\r\n                                                director={book.publisher}\r\n                                                actor={book.actor}\r\n                                                summary={book.description}\r\n                                            />)\r\n                                        )\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        )\r\n                }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div className=\"about__container\">\r\n            <h1>\r\n                도서 검색 테스트용 with React.\r\n            </h1>\r\n            <h3>\r\n                출처: 노마드코더, 네이버 API, Lotts Blog 참조\r\n            </h3>\r\n            <span>lee jaekwun 2021</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if (location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n            return (\r\n                <div className=\"about__container\">\r\n                    <span>{location.state.year}</span>\r\n                    <h1>{location.state.title}</h1>\r\n                    <span>{location.state.summary}</span>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\"\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home}></Route>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/detail/:id\" component={Detail}></Route>\n    </HashRouter>);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}